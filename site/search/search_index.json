{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83c\udf0d BooLe Mobile App API Documentation","text":"<p>Comprehensive REST API documentation for BooLe Apps - Your companion for exploring Indonesian destinations, cultural heritage, and emergency services.</p> <p> </p>"},{"location":"#table-of-contents","title":"\ud83d\udccb Table of Contents","text":"<ul> <li>Overview</li> <li>Getting Started</li> <li>Authentication</li> <li>API Endpoints</li> <li>Destinations</li> <li>Culture &amp; Education</li> <li>Emergency Services</li> <li>Error Handling</li> <li>Rate Limiting</li> <li>Code Examples</li> <li>Contributing</li> <li>License</li> </ul>"},{"location":"#overview","title":"\ud83c\udfaf Overview","text":"<p>BooLe API provides a robust backend infrastructure built on Supabase Postgres to deliver:</p> <ul> <li>\ud83c\udfd6\ufe0f Tourism Destinations - Comprehensive data on tourist attractions across Indonesia</li> <li>\ud83c\udfad Cultural Education - Rich information about local customs, languages, and traditions</li> <li>\ud83d\udea8 Emergency Services - Quick access to critical emergency contacts nationwide</li> <li>\u26a1 Real-time Updates - Live data synchronization</li> <li>\ud83d\udd12 Secure Access - Protected endpoints with API key authentication</li> <li>\ud83d\udcf1 Mobile-First - Optimized for mobile app integration</li> </ul>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>RESTful API architecture</li> <li>JSON response format</li> <li>Row Level Security (RLS) enabled</li> <li>Automatic timestamps</li> <li>Multi-language support</li> <li>Geolocation data</li> </ul>"},{"location":"#getting-started","title":"\ud83d\ude80 Getting Started","text":""},{"location":"#base-url","title":"Base URL","text":"<pre><code>https://fowfuytbmgxpeogsaiwk.supabase.co\n</code></pre>"},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>Valid Supabase API key</li> <li>HTTP client (curl, Postman, or programming language HTTP library)</li> <li>Basic understanding of REST APIs</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<ol> <li>Obtain API Credentials</li> <li>Get your <code>SUPABASE_URL</code> and <code>SUPABASE_ANON_KEY</code> from Supabase dashboard</li> <li> <p>Store credentials securely (use environment variables)</p> </li> <li> <p>Make Your First Request <code>bash    curl -X GET \\      'https://fowfuytbmgxpeogsaiwk.supabase.co/rest/v1/destinations' \\      -H 'apikey: YOUR_API_KEY' \\      -H 'Authorization: Bearer YOUR_API_KEY'</code></p> </li> <li> <p>Process Response</p> </li> <li>All responses are in JSON format</li> <li>Check HTTP status codes for success/errors</li> </ol>"},{"location":"#authentication","title":"\ud83d\udd10 Authentication","text":"<p>All API requests require authentication using API keys in request headers.</p>"},{"location":"#required-headers","title":"Required Headers","text":"Header Value Description <code>apikey</code> <code>YOUR_API_KEY</code> Supabase anonymous or service key <code>Authorization</code> <code>Bearer YOUR_API_KEY</code> Bearer token for authentication <code>Content-Type</code> <code>application/json</code> Required for POST/PUT/PATCH requests"},{"location":"#environment-setup","title":"Environment Setup","text":"<p>Using .env file:</p> <pre><code>SUPABASE_URL=https://fowfuytbmgxpeogsaiwk.supabase.co\nSUPABASE_ANON_KEY=your_anon_key_here\n</code></pre> <p>Using Flutter/Dart (ENVIED):</p> <pre><code>import 'package:envied/envied.dart';\n\npart 'env.g.dart';\n\n@Envied(path: '.env')\nabstract class Env {\n  @EnviedField(varName: 'SUPABASE_URL', obfuscate: true)\n  static final String supabaseUrl = _Env.supabaseUrl;\n\n  @EnviedField(varName: 'SUPABASE_ANON_KEY', obfuscate: true)\n  static final String supabaseAnonKey = _Env.supabaseAnonKey;\n}\n</code></pre>"},{"location":"#api-endpoints","title":"\ud83d\udee3\ufe0f API Endpoints","text":""},{"location":"#destinations","title":"\ud83c\udfd6\ufe0f Destinations","text":"<p>Manage and retrieve tourist destination data across Indonesia.</p>"},{"location":"#get-all-destinations","title":"Get All Destinations","text":"<pre><code>GET /rest/v1/destinations\n</code></pre> <p>Query Parameters:</p> Parameter Type Description Example <code>province</code> string Filter by province name <code>province=eq.Bali</code> <code>city</code> string Filter by city name <code>city=eq.Batam</code> <code>category</code> string Filter by destination type <code>category=eq.Beach</code> <code>rating</code> number Filter by minimum rating <code>rating=gte.4.5</code> <code>limit</code> integer Limit results (default: 10) <code>limit=20</code> <code>offset</code> integer Pagination offset <code>offset=10</code> <code>order</code> string Sort results <code>order=rating.desc</code> <p>Supabase Query Operators: - <code>eq</code> - equals - <code>neq</code> - not equals - <code>gt</code> - greater than - <code>gte</code> - greater than or equal - <code>lt</code> - less than - <code>lte</code> - less than or equal - <code>like</code> - pattern matching - <code>ilike</code> - case-insensitive pattern matching</p> <p>Example Request:</p> <pre><code>curl -X GET \\\n  'https://fowfuytbmgxpeogsaiwk.supabase.co/rest/v1/destinations?province=eq.Bali&amp;limit=10&amp;order=rating.desc' \\\n  -H 'apikey: YOUR_API_KEY' \\\n  -H 'Authorization: Bearer YOUR_API_KEY'\n</code></pre> <p>Response (200 OK):</p> <pre><code>[\n  {\n    \"id\": \"97eb9785-9612-4d73-bf55-d4d1f2330d93\",\n    \"name\": \"Nongsa Beach\",\n    \"description\": \"A beach with white sand and a scenic view of Singapore from afar.\",\n    \"city\": \"Batam\",\n    \"province\": \"Riau Islands\",\n    \"latitude\": 1.234567,\n    \"longitude\": 104.123456,\n    \"category\": \"Beach\",\n    \"rating\": 4.6,\n    \"ticket_price\": 20000,\n    \"facilities\": [\n      \"Toilet\",\n      \"Food Stalls\",\n      \"Parking Area\",\n      \"Accommodation\"\n    ],\n    \"opening_hours\": {\n      \"monday\": \"08:00-18:00\",\n      \"tuesday\": \"08:00-18:00\",\n      \"wednesday\": \"08:00-18:00\",\n      \"thursday\": \"08:00-18:00\",\n      \"friday\": \"08:00-18:00\",\n      \"saturday\": \"07:00-19:00\",\n      \"sunday\": \"07:00-19:00\"\n    },\n    \"image_urls\": [\n      \"https://i.postimg.cc/8zfRfkgd/IMG-20210930-WA0091.jpg\",\n      \"https://i.postimg.cc/25z5RTGm/pantai-nongsa-batam-riau.jpg\",\n      \"https://i.postimg.cc/2y46Ntsm/3454b-montego-resort-di-nongsa-batam.jpg\"\n    ],\n    \"created_at\": \"2025-10-10T08:01:00.989309+00:00\",\n    \"updated_at\": \"2025-10-10T08:01:00.989309+00:00\"\n  }\n]\n</code></pre>"},{"location":"#get-single-destination","title":"Get Single Destination","text":"<pre><code>GET /rest/v1/destinations?id=eq.{destination_id}\n</code></pre> <p>Response: Single destination object in array format</p>"},{"location":"#culture-education","title":"\ud83c\udfad Culture &amp; Education","text":"<p>Access cultural information, traditions, and educational content about Indonesian provinces.</p>"},{"location":"#get-all-cultures","title":"Get All Cultures","text":"<pre><code>GET /rest/v1/culture\n</code></pre> <p>Query Parameters:</p> Parameter Type Description Example <code>province</code> string Filter by province name <code>province=eq.Bali</code> <code>region</code> string Filter by geographical region <code>region=eq.Sulawesi</code> <code>province_code</code> string Filter by province code <code>province_code=eq.BA</code> <code>limit</code> integer Limit results <code>limit=5</code> <code>order</code> string Sort results <code>order=province.asc</code> <p>Example Request:</p> <pre><code>curl -X GET \\\n  'https://fowfuytbmgxpeogsaiwk.supabase.co/rest/v1/culture?region=eq.Java' \\\n  -H 'apikey: YOUR_API_KEY' \\\n  -H 'Authorization: Bearer YOUR_API_KEY'\n</code></pre> <p>Response (200 OK):</p> <pre><code>[\n  {\n    \"id\": \"41a574f4-8c9a-4e02-b28a-f0ab12ca8839\",\n    \"province\": \"South Sulawesi\",\n    \"province_code\": \"SS\",\n    \"region\": \"Sulawesi\",\n    \"local_languages\": [\"Bugis\", \"Makassarese\"],\n    \"primary_language\": \"Bugis\",\n    \"greeting_phrases\": {\n      \"common\": [\n        {\n          \"phrase\": \"Assalamu'alaikum\",\n          \"translation\": \"Peace be upon you\"\n        }\n      ],\n      \"formal\": [\n        {\n          \"phrase\": \"Selamat pagi\",\n          \"translation\": \"Good morning\"\n        }\n      ]\n    },\n    \"dress_code\": {\n      \"men\": \"Sarong and traditional shirts\",\n      \"women\": \"Kebaya and sarong\"\n    },\n    \"social_etiquette\": {\n      \"family\": \"Strong kinship ties\",\n      \"greetings\": \"Handshake and slight nod\"\n    },\n    \"taboos\": {\n      \"mourning\": \"Respectful behavior at funerals\"\n    },\n    \"religious_practices\": {\n      \"practices\": \"Mosque attendance and festivals\",\n      \"predominant_religion\": \"Islam\"\n    },\n    \"cultural_highlights\": {\n      \"heritage\": \"Maritime traditions\",\n      \"landmarks\": [\"Fort Rotterdam\", \"Bontosunggu\"]\n    },\n    \"traditional_arts\": {\n      \"dance\": [\"Pakarena\"],\n      \"crafts\": [\"Pottery\"]\n    },\n    \"culinary_customs\": {\n      \"dishes\": [\"Coto Makassar\", \"Konro\"],\n      \"flavors\": \"Rich broth-based dishes\"\n    },\n    \"festivals\": {\n      \"major\": [\"Maulid Nabi\"]\n    },\n    \"description\": \"South Sulawesi is noted for its seafaring history and robust cuisine.\",\n    \"visitor_tips\": [\n      \"Respect local fishing communities\",\n      \"Ask before photographing ceremonies\"\n    ],\n    \"image_urls\": [\n      \"https://i.imgur.com/HaUVS1N.jpeg\",\n      \"https://i.imgur.com/jxklGM6.jpeg\",\n      \"https://i.imgur.com/7ozdRFW.jpeg\"\n    ],\n    \"created_at\": \"2025-10-11T10:04:11.548343+00:00\"\n  }\n]\n</code></pre>"},{"location":"#emergency-services","title":"\ud83d\udea8 Emergency Services","text":"<p>Access emergency contact information for hospitals, police, fire departments, and other critical services.</p>"},{"location":"#get-all-emergency-services","title":"Get All Emergency Services","text":"<pre><code>GET /rest/v1/emergency_services\n</code></pre> <p>Query Parameters:</p> Parameter Type Description Example <code>category</code> string Filter by service type <code>category=eq.hospital</code> <code>coverage_level</code> string Filter by coverage (national/provincial/city) <code>coverage_level=eq.national</code> <code>coverage_code</code> string Filter by area code <code>coverage_code=eq.ID</code> <code>priority</code> integer Filter by priority level <code>priority=lte.3</code> <code>order</code> string Sort results <code>order=priority.asc</code> <p>Available Categories: - <code>police</code> - Law enforcement - <code>fire</code> - Fire department - <code>ambulance</code> - Medical emergency - <code>hospital</code> - Healthcare facilities - <code>search_rescue</code> - SAR teams - <code>disaster</code> - Disaster management</p> <p>Example Request:</p> <pre><code>curl -X GET \\\n  'https://fowfuytbmgxpeogsaiwk.supabase.co/rest/v1/emergency_services?category=eq.hospital&amp;coverage_level=eq.city' \\\n  -H 'apikey: YOUR_API_KEY' \\\n  -H 'Authorization: Bearer YOUR_API_KEY'\n</code></pre> <p>Response (200 OK):</p> <pre><code>[\n  {\n    \"id\": \"302d00bd-0d7d-492c-8abb-0050bb7bae52\",\n    \"name\": \"Police\",\n    \"category\": \"police\",\n    \"description\": \"National police emergency service for crime reports, accidents, and other emergency situations\",\n    \"coverage_level\": \"national\",\n    \"coverage_code\": \"ID\",\n    \"coverage_name\": \"Indonesia\",\n    \"latitude\": null,\n    \"longitude\": null,\n    \"languages\": [\"id\", \"en\"],\n    \"contact_hours\": \"24/7\",\n    \"priority\": 1,\n    \"verified_at\": \"2025-10-21T04:24:28.743109+00:00\",\n    \"source_name\": \"Indonesian National Police (POLRI)\",\n    \"source_url\": \"https://www.polri.go.id\",\n    \"source_type\": \"official\",\n    \"tags\": [\"emergency\", \"crime\", \"accident\", \"security\"],\n    \"metadata\": {},\n    \"created_at\": \"2025-10-21T04:24:28.743109+00:00\",\n    \"updated_at\": \"2025-10-21T04:24:28.743109+00:00\"\n  }\n]\n</code></pre>"},{"location":"#error-handling","title":"\u26a0\ufe0f Error Handling","text":"<p>The API uses standard HTTP status codes and returns detailed error messages.</p>"},{"location":"#http-status-codes","title":"HTTP Status Codes","text":"Code Status Description 200 OK Request successful 201 Created Resource created successfully 400 Bad Request Invalid request parameters 401 Unauthorized Missing or invalid API key 403 Forbidden Insufficient permissions 404 Not Found Resource not found 406 Not Acceptable Invalid Accept header 429 Too Many Requests Rate limit exceeded 500 Internal Server Error Server error 503 Service Unavailable Service temporarily unavailable"},{"location":"#error-response-format","title":"Error Response Format","text":"<pre><code>{\n  \"code\": \"PGRST116\",\n  \"message\": \"The result contains 0 rows\",\n  \"details\": null,\n  \"hint\": null\n}\n</code></pre>"},{"location":"#common-error-examples","title":"Common Error Examples","text":"<p>401 Unauthorized:</p> <pre><code>{\n  \"message\": \"Invalid API key\"\n}\n</code></pre> <p>400 Bad Request:</p> <pre><code>{\n  \"code\": \"PGRST102\",\n  \"message\": \"column destinations.invalid_field does not exist\",\n  \"details\": null,\n  \"hint\": null\n}\n</code></pre>"},{"location":"#rate-limiting","title":"\ud83d\udcca Rate Limiting","text":"<p>To ensure fair usage and service stability:</p> <ul> <li>Default Rate Limit: 100 requests per minute per API key</li> <li>Burst Limit: 20 requests per second</li> <li>Rate limit headers included in responses:</li> <li><code>X-RateLimit-Limit</code>: Maximum requests allowed</li> <li><code>X-RateLimit-Remaining</code>: Requests remaining</li> <li><code>X-RateLimit-Reset</code>: Time when limit resets (Unix timestamp)</li> </ul> <p>Best Practices: - Implement exponential backoff for retries - Cache responses when appropriate - Use pagination for large datasets - Monitor rate limit headers</p>"},{"location":"#code-examples","title":"\ud83d\udcbb Code Examples","text":""},{"location":"#flutterdart-implementation","title":"Flutter/Dart Implementation","text":"<p>Client Setup:</p> <pre><code>import 'package:http/http.dart' as http;\nimport 'dart:convert';\n\nclass BooLeApiClient {\n  final String baseUrl;\n  final String apiKey;\n  final http.Client client;\n\n  BooLeApiClient({\n    required this.baseUrl,\n    required this.apiKey,\n    http.Client? client,\n  }) : client = client ?? http.Client();\n\n  Map&lt;String, String&gt; get _headers =&gt; {\n    'apikey': apiKey,\n    'Authorization': 'Bearer $apiKey',\n    'Content-Type': 'application/json',\n  };\n\n  Future&lt;List&lt;dynamic&gt;&gt; getDestinations({\n    String? province,\n    String? category,\n    int? limit,\n  }) async {\n    final queryParams = &lt;String, String&gt;{};\n    if (province != null) queryParams['province'] = 'eq.$province';\n    if (category != null) queryParams['category'] = 'eq.$category';\n    if (limit != null) queryParams['limit'] = limit.toString();\n\n    final uri = Uri.parse('$baseUrl/rest/v1/destinations')\n        .replace(queryParameters: queryParams);\n\n    final response = await client.get(uri, headers: _headers);\n\n    if (response.statusCode == 200) {\n      return json.decode(response.body) as List&lt;dynamic&gt;;\n    } else {\n      throw Exception('Failed to load destinations: ${response.body}');\n    }\n  }\n\n  Future&lt;List&lt;dynamic&gt;&gt; getCulture({String? region}) async {\n    final queryParams = &lt;String, String&gt;{};\n    if (region != null) queryParams['region'] = 'eq.$region';\n\n    final uri = Uri.parse('$baseUrl/rest/v1/culture')\n        .replace(queryParameters: queryParams);\n\n    final response = await client.get(uri, headers: _headers);\n\n    if (response.statusCode == 200) {\n      return json.decode(response.body) as List&lt;dynamic&gt;;\n    } else {\n      throw Exception('Failed to load culture data: ${response.body}');\n    }\n  }\n\n  Future&lt;List&lt;dynamic&gt;&gt; getEmergencyServices({\n    String? category,\n    String? coverageLevel,\n  }) async {\n    final queryParams = &lt;String, String&gt;{\n      'order': 'priority.asc',\n    };\n    if (category != null) queryParams['category'] = 'eq.$category';\n    if (coverageLevel != null) {\n      queryParams['coverage_level'] = 'eq.$coverageLevel';\n    }\n\n    final uri = Uri.parse('$baseUrl/rest/v1/emergency_services')\n        .replace(queryParameters: queryParams);\n\n    final response = await client.get(uri, headers: _headers);\n\n    if (response.statusCode == 200) {\n      return json.decode(response.body) as List&lt;dynamic&gt;;\n    } else {\n      throw Exception('Failed to load emergency services: ${response.body}');\n    }\n  }\n\n  void dispose() {\n    client.close();\n  }\n}\n</code></pre> <p>Usage Example:</p> <pre><code>void main() async {\n  final client = BooLeApiClient(\n    baseUrl: Env.supabaseUrl,\n    apiKey: Env.supabaseAnonKey,\n  );\n\n  try {\n    // Get destinations in Bali\n    final destinations = await client.getDestinations(\n      province: 'Bali',\n      limit: 10,\n    );\n    print('Found ${destinations.length} destinations');\n\n    // Get culture info for Java region\n    final cultures = await client.getCulture(region: 'Java');\n    print('Found ${cultures.length} culture entries');\n\n    // Get emergency services\n    final emergencyServices = await client.getEmergencyServices(\n      category: 'hospital',\n      coverageLevel: 'national',\n    );\n    print('Found ${emergencyServices.length} emergency services');\n  } catch (e) {\n    print('Error: $e');\n  } finally {\n    client.dispose();\n  }\n}\n</code></pre>"},{"location":"#javascripttypescript-example","title":"JavaScript/TypeScript Example","text":"<pre><code>import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.SUPABASE_URL!;\nconst supabaseKey = process.env.SUPABASE_ANON_KEY!;\nconst supabase = createClient(supabaseUrl, supabaseKey);\n\n// Get destinations\nasync function getDestinations(filters?: {\n  province?: string;\n  category?: string;\n  limit?: number;\n}) {\n  let query = supabase.from('destinations').select('*');\n\n  if (filters?.province) {\n    query = query.eq('province', filters.province);\n  }\n  if (filters?.category) {\n    query = query.eq('category', filters.category);\n  }\n  if (filters?.limit) {\n    query = query.limit(filters.limit);\n  }\n\n  const { data, error } = await query;\n\n  if (error) throw error;\n  return data;\n}\n\n// Get culture data\nasync function getCultureData(region?: string) {\n  let query = supabase.from('culture').select('*');\n\n  if (region) {\n    query = query.eq('region', region);\n  }\n\n  const { data, error } = await query;\n\n  if (error) throw error;\n  return data;\n}\n\n// Get emergency services\nasync function getEmergencyServices(filters?: {\n  category?: string;\n  coverageLevel?: string;\n}) {\n  let query = supabase\n    .from('emergency_services')\n    .select('*')\n    .order('priority', { ascending: true });\n\n  if (filters?.category) {\n    query = query.eq('category', filters.category);\n  }\n  if (filters?.coverageLevel) {\n    query = query.eq('coverage_level', filters.coverageLevel);\n  }\n\n  const { data, error } = await query;\n\n  if (error) throw error;\n  return data;\n}\n</code></pre>"},{"location":"#python-example","title":"Python Example","text":"<pre><code>import os\nimport requests\nfrom typing import Optional, List, Dict\n\nclass BooLeAPI:\n    def __init__(self, base_url: str, api_key: str):\n        self.base_url = base_url\n        self.headers = {\n            'apikey': api_key,\n            'Authorization': f'Bearer {api_key}',\n            'Content-Type': 'application/json'\n        }\n\n    def get_destinations(\n        self,\n        province: Optional[str] = None,\n        category: Optional[str] = None,\n        limit: Optional[int] = None\n    ) -&gt; List[Dict]:\n        params = {}\n        if province:\n            params['province'] = f'eq.{province}'\n        if category:\n            params['category'] = f'eq.{category}'\n        if limit:\n            params['limit'] = str(limit)\n\n        response = requests.get(\n            f'{self.base_url}/rest/v1/destinations',\n            headers=self.headers,\n            params=params\n        )\n        response.raise_for_status()\n        return response.json()\n\n    def get_culture(self, region: Optional[str] = None) -&gt; List[Dict]:\n        params = {}\n        if region:\n            params['region'] = f'eq.{region}'\n\n        response = requests.get(\n            f'{self.base_url}/rest/v1/culture',\n            headers=self.headers,\n            params=params\n        )\n        response.raise_for_status()\n        return response.json()\n\n    def get_emergency_services(\n        self,\n        category: Optional[str] = None,\n        coverage_level: Optional[str] = None\n    ) -&gt; List[Dict]:\n        params = {'order': 'priority.asc'}\n        if category:\n            params['category'] = f'eq.{category}'\n        if coverage_level:\n            params['coverage_level'] = f'eq.{coverage_level}'\n\n        response = requests.get(\n            f'{self.base_url}/rest/v1/emergency_services',\n            headers=self.headers,\n            params=params\n        )\n        response.raise_for_status()\n        return response.json()\n\n# Usage\napi = BooLeAPI(\n    base_url=os.getenv('SUPABASE_URL'),\n    api_key=os.getenv('SUPABASE_ANON_KEY')\n)\n\ndestinations = api.get_destinations(province='Bali', limit=10)\nprint(f'Found {len(destinations)} destinations')\n</code></pre>"},{"location":"#testing","title":"\ud83e\uddea Testing","text":""},{"location":"#using-postman","title":"Using Postman","text":"<ol> <li>Create New Request</li> <li>Method: GET</li> <li> <p>URL: <code>https://fowfuytbmgxpeogsaiwk.supabase.co/rest/v1/destinations</code></p> </li> <li> <p>Add Headers</p> </li> <li>Key: <code>apikey</code>, Value: <code>YOUR_API_KEY</code></li> <li> <p>Key: <code>Authorization</code>, Value: <code>Bearer YOUR_API_KEY</code></p> </li> <li> <p>Add Query Parameters (Optional)</p> </li> <li><code>province</code>: <code>eq.Bali</code></li> <li> <p><code>limit</code>: <code>10</code></p> </li> <li> <p>Send Request and inspect response</p> </li> </ol>"},{"location":"#using-curl","title":"Using cURL","text":"<p>Test Destinations Endpoint:</p> <pre><code>curl -X GET \\\n  'https://fowfuytbmgxpeogsaiwk.supabase.co/rest/v1/destinations?limit=5' \\\n  -H 'apikey: YOUR_API_KEY' \\\n  -H 'Authorization: Bearer YOUR_API_KEY' \\\n  | jq '.'\n</code></pre> <p>Test with Filters:</p> <pre><code>curl -X GET \\\n  'https://fowfuytbmgxpeogsaiwk.supabase.co/rest/v1/destinations?province=eq.Bali&amp;category=eq.Beach' \\\n  -H 'apikey: YOUR_API_KEY' \\\n  -H 'Authorization: Bearer YOUR_API_KEY' \\\n  | jq '.'\n</code></pre>"},{"location":"#additional-resources","title":"\ud83d\udcda Additional Resources","text":""},{"location":"#supabase-documentation","title":"Supabase Documentation","text":"<ul> <li>Supabase REST API Guide</li> <li>PostgREST Documentation</li> <li>Supabase Client Libraries</li> </ul>"},{"location":"#community-support","title":"Community &amp; Support","text":"<ul> <li>GitHub Issues - Report bugs or request features</li> <li>Supabase Discord - Community support</li> <li>Stack Overflow - Q&amp;A</li> </ul>"},{"location":"#contributing","title":"\ud83e\udd1d Contributing","text":"<p>We welcome contributions! Here's how you can help:</p>"},{"location":"#development-setup","title":"Development Setup","text":"<ol> <li> <p>Fork the Repository <code>bash    git clone https://github.com/yourusername/boole-mobile-app-api.git    cd boole-mobile-app-api</code></p> </li> <li> <p>Create Feature Branch <code>bash    git checkout -b feature/amazing-feature</code></p> </li> <li> <p>Make Changes</p> </li> <li>Write clear, descriptive commit messages</li> <li>Follow existing code style</li> <li>Add tests if applicable</li> <li> <p>Update documentation</p> </li> <li> <p>Commit Changes <code>bash    git commit -m \"feat: add amazing feature\"</code></p> </li> <li> <p>Push to Branch <code>bash    git push origin feature/amazing-feature</code></p> </li> <li> <p>Open Pull Request</p> </li> <li>Describe your changes clearly</li> <li>Reference any related issues</li> <li>Wait for review</li> </ol>"},{"location":"#contribution-guidelines","title":"Contribution Guidelines","text":"<ul> <li>Follow Conventional Commits</li> <li>Write meaningful commit messages</li> <li>Keep PRs focused and atomic</li> <li>Add documentation for new features</li> <li>Ensure backward compatibility</li> </ul>"},{"location":"#code-of-conduct","title":"Code of Conduct","text":"<ul> <li>Be respectful and inclusive</li> <li>Provide constructive feedback</li> <li>Help others learn and grow</li> <li>Follow community guidelines</li> </ul>"},{"location":"#changelog","title":"\ud83d\udd04 Changelog","text":""},{"location":"#version-100-2025-10-26","title":"Version 1.0.0 (2025-10-26)","text":"<ul> <li>Initial API release</li> <li>Destinations endpoint</li> <li>Culture endpoint</li> <li>Emergency services endpoint</li> <li>Complete documentation</li> </ul>"},{"location":"#license","title":"\ud83d\udcc4 License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details.</p>"},{"location":"#mit-license-summary","title":"MIT License Summary","text":"<pre><code>Copyright (c) 2025 Sande Okta Effendi\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n</code></pre>"},{"location":"#acknowledgments","title":"\ud83d\ude4f Acknowledgments","text":"<ul> <li>Supabase Team - For the amazing platform</li> <li>Dicoding Indonesia - For amazing learning journey</li> <li>Boole Mobile App's Team - For making this project better</li> </ul>"},{"location":"#support","title":"\ud83d\udcde Support","text":"<p>Need help? Have questions?</p> <ul> <li>\ud83d\udcd6 Check the Documentation</li> <li>\ud83d\udc1b Report Bugs</li> <li>\ud83d\udca1 Request Features</li> <li>\ud83d\udcac Join Discussions</li> </ul>   **Made with \u2764\ufe0f for Indonesian Tourism**  \u2b50 Star this repo if you find it helpful!  [Report Bug](../../issues) \u00b7 [Request Feature](../../issues) \u00b7 [Documentation](#)"}]}